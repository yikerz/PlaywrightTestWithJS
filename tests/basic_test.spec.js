import { chromium, expect, test } from '@playwright/test';

test.describe('Basic tests', () => {

	let browser;
	let context;
	let page;
	
	test.beforeAll(async () => {
		browser = await chromium.launch({
			slowMo: 500,
			headless: false
		});
		context = await browser.newContext();
		page = await browser.newPage();

	})
	
	test.afterAll(async () => {
		await browser.close();
	})

	test('Input and mouse click test', async () => {
		await page.goto("https://formy-project.herokuapp.com/keypress");

		const name_field = await page.locator('[id=name]')
		await name_field.click();
		await name_field.fill("Travis");

		const button = await page.locator('//*[contains(@id, "button")]')
		await button.click();
	})

	test.skip('Autocomplete test', async () => {
		await page.goto("https://formy-project.herokuapp.com/autocomplete");

		const input_field = await page.$('#autocomplete');
		if (input_field) {
			input_field.fill('1555 Park Blvd, Palo Alto, CA');
		}

		const result = await page.$('.pac-item');
		if (result) {
			result.click();
		} else {
			test.fail("Cannot load google")
		}
	})

	test('Scroll window test', async () => {
		/* This test is generated by recording using `page.pause()` */
		await page.goto("https://formy-project.herokuapp.com/scroll");
		// await page.pause();
		await page.getByPlaceholder('Full name').click();
		await page.getByPlaceholder('Full name').fill('Travis');
		await page.getByPlaceholder('MM/DD/YYYY').click();
		await page.getByPlaceholder('MM/DD/YYYY').fill('01/01/2020');
	})

	test('Switch window test', async () => {
		await page.goto("https://formy-project.herokuapp.com/switch-window");

		const page2Promise = page.waitForEvent('popup'); // no await for popup!
		await page.locator('xpath=//*[@id="new-tab-button"]').click();
		const page2 = await page2Promise;

		await expect(page2).toHaveURL("https://formy-project.herokuapp.com/");
		await page2.close();
	})
	
	test('Switch alert test', async () => {
		await page.goto("https://formy-project.herokuapp.com/switch-window");

		await page.click('#alert-button');
		page.on('dialog', async dialog => {
			console.log(dialog.message());
			await dialog.accept();
		})
		await page.evaluate(() => alert('1'));
	})

	test('Simple drag and drop test', async () => {
		await page.goto("https://formy-project.herokuapp.com/dragdrop");

		const image = await page.locator('id=image');
		const box = await page.locator('id=box');

		await image.dragTo(box);
	})

	test('Detailed drag and drop test', async () => {
		await page.goto("https://formy-project.herokuapp.com/dragdrop");

		const image = await page.locator('id=image');
		const box = await page.locator('id=box');

		// using action chain
		await image.hover();
		await page.mouse.down();
		await box.hover();
		await page.mouse.up();
	})
	
})